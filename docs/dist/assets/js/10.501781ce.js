(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{366:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"内存空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存空间"}},[t._v("#")]),t._v(" 内存空间")]),t._v(" "),s("ul",[s("li",[t._v("因为 JavaScript有垃圾自动回收机制，所以对于前端开发人员来说，内存空间并不是一个经 常被提及的概念，很容易被大家忽视。")])]),t._v(" "),s("h3",{attrs:{id:"基本数据类型和引用数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型和引用数据类型"}},[t._v("#")]),t._v(" 基本数据类型和引用数据类型")]),t._v(" "),s("ul",[s("li",[t._v("最新的 ECMAScript标准号定义了 7种数据类型，其中包括"),s("strong",[t._v("六种基础数据类型")]),t._v("与一种"),s("strong",[t._v("引用数据类型")]),t._v("（object）")]),t._v(" "),s("li",[t._v("基本数据类型包括")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("只有两个值  : true与false")])]),t._v(" "),s("tr",[s("td",[t._v("Null")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("只有一个值  : null")])]),t._v(" "),s("tr",[s("td",[t._v("Undefined")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("只有一个值  : undefined")])]),t._v(" "),s("tr",[s("td",[t._v("Number")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("所有的数字")])]),t._v(" "),s("tr",[s("td",[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("所有的字符串")])]),t._v(" "),s("tr",[s("td",[t._v("Symbol")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("符号类型 var sym = Symbol(‘testsymbol’)")])])])]),t._v(" "),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),s("blockquote",[s("p",[t._v("函数运行时，会创建一个执行环境，这个执行环境叫作执行上下文( Execution Context)。 在执行上下文中，会创建一个叫作变量对象的特殊对象。基本数据类型往往都纯在变量对象里面")])]),t._v(" "),s("p",[s("strong",[t._v("变量对象也存在于堆内存中，但是由于变量对象有特殊智能，因此在理解时，建议将其与堆内存空间分开")])]),t._v(" "),s("h3",{attrs:{id:"队列-queue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列-queue"}},[t._v("#")]),t._v(" 队列(queue)")]),t._v(" "),s("blockquote",[s("p",[t._v("队列是一种先进先出的（FIFO）的数据结构。 正如排队过安检一样，排在队伍前面 的人一定是最先过安检的人 。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"//app-test.h5.ihaozhuo.com/zgm/images/291597287250_.pic.jpg",alt:""}})]),t._v(" "),s("h1",{attrs:{id:"三种基础数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三种基础数据结构"}},[t._v("#")]),t._v(" 三种基础数据结构")]),t._v(" "),s("h2",{attrs:{id:"栈-stack-、堆-heap-、队列-queue-。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack-、堆-heap-、队列-queue-。"}},[t._v("#")]),t._v(" 栈( stack)、堆 (heap )、队列(queue)。")]),t._v(" "),s("h3",{attrs:{id:"栈-stack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack"}},[t._v("#")]),t._v(" 栈( stack)")]),t._v(" "),s("ul",[s("li",[t._v("场景1: 栈是一种数据结构，它表达的是数据的一种存取方式，这是一种理论基础。")]),t._v(" "),s("li",[t._v("场景2: 栈可用来规定代码的执行顺序，在 JavaScript 中叫作函数调用栈( call stack )，它是根据栈数据结构理论而实现的一种实践。")]),t._v(" "),s("li",[t._v("总结为先进后出，后进先出 ( LIFO , Last In, First Out )。\n"),s("img",{attrs:{src:"//app-test.h5.ihaozhuo.com/zgm/images/311597287563_.pic_hd.jpg",alt:""}})])]),t._v(" "),s("h3",{attrs:{id:"堆-heap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆-heap"}},[t._v("#")]),t._v(" 堆 (heap )")]),t._v(" "),s("blockquote",[s("p",[t._v("堆数据结构通常是一种树状结构。它的存取方式与在书架中取书的方式非常相似。\n书虽然整齐地摆放在书架上，但是只要知道 书的名字，在书架中找到它之后就可以很方便地取出，我们甚至不用关心书的存放顺序。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"//app-test.h5.ihaozhuo.com/zgm/images/301597287457_.pic_hd.jpg",alt:""}})]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" heap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    b"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      m"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当我们想要访问 a 时，只需通过 heap.a 来访问即可，而不用关心 a、 b、 c 的具体顺序 。")]),t._v("\n")])])]),s("h3",{attrs:{id:"队列-queue-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#队列-queue-2"}},[t._v("#")]),t._v(" 队列(queue)")]),t._v(" "),s("blockquote",[s("p",[t._v("队列是一种先进先出的（FIFO）的数据结构。 正如排队过安检一样，排在队伍前面 的人一定是最先过安检的人 。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"//app-test.h5.ihaozhuo.com/zgm/images/291597287250_.pic.jpg",alt:""}})])])}),[],!1,null,null,null);a.default=r.exports}}]);